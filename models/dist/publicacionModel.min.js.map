{"version":3,"sources":["publicacionModel.js"],"names":["require","obtenerConexion","getAll","conexion","_ref","_ref2","results","regeneratorRuntime","async","_context","prev","next","awrap","sent","query","_slicedToArray","abrupt","t0","console","error","finish","stop","obtenerImagenPorId","id","_ref3","_ref4","_context2","length","imagen","release","obtenerVideoPorId","_ref5","_ref6","_context3","video","crearPublicacion","usuario_id","titulo","contenido","_context4","module","exports"],"mappings":"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","file":"publicacionModel.min.js","sourcesContent":["const { obtenerConexion } = require('../datebase/conexion');\n\nasync function getAll() {\n    const conexion = await obtenerConexion();\n    try {\n        const [results] = await conexion.query('SELECT * FROM publicaciones');\n        return results;\n    } catch (error) {\n        console.error('Error al seleccionar publicaciones', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n// Función para obtener una imagen por ID\nasync function obtenerImagenPorId(id) {\n    const conexion = await obtenerConexion();\n    try {\n        const [results] = await conexion.query('SELECT imagen FROM publicaciones WHERE id = ?', [id]);\n        if (results.length > 0) {\n            return results[0].imagen;  // Devuelve el campo de imagen\n        } else {\n            return null;  // No se encontró la imagen\n        }\n    } catch (error) {\n        console.error('Error al obtener la imagen:', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n// Función para obtener un vídeo por ID\nasync function obtenerVideoPorId(id) {\n    const conexion = await obtenerConexion();\n    try {\n        const [results] = await conexion.query('SELECT video FROM publicaciones WHERE id = ?', [id]);\n        if (results.length > 0) {\n            return results[0].video;  // Devuelve el campo de video\n        } else {\n            return null;  // No se encontró el video\n        }\n    } catch (error) {\n        console.error('Error al obtener el video:', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n// Crear una nueva publicación\nasync function crearPublicacion(usuario_id, titulo, contenido, imagen, video) {\n    const conexion = await obtenerConexion();\n    try {\n        await conexion.query(\n            'INSERT INTO publicaciones (usuario_id, titulo, contenido, imagen, video) VALUES (?, ?, ?, ?, ?)',\n            [usuario_id, titulo, contenido, imagen, video]\n        );\n    } catch (error) {\n        console.error('Error al crear la publicación:', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n\nmodule.exports = {\n    getAll,\n    crearPublicacion,\n    obtenerImagenPorId,\n    obtenerVideoPorId\n};"]}