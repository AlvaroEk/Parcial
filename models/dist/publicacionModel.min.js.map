{"version":3,"sources":["publicacionModel.js"],"names":["require","obtenerConexion","getAll","conexion","_ref","_ref2","results","regeneratorRuntime","async","_context","prev","next","awrap","sent","query","_slicedToArray","abrupt","t0","console","error","finish","stop","crearPublicacion","usuario_id","titulo","contenido","imagen","video","_context2","release"],"mappings":"goBAA4BA,QAAQ,wBAA5BC,yBAAAA,gBAER,SAAeC,SAAf,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAC2BX,mBAD3B,KAAA,EAAA,OACUE,EADVM,EAAAI,KAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAGgCT,EAASW,MAAM,gCAH/C,KAAA,EAAA,OAAAV,EAAAK,EAAAI,KAAAR,EAAAU,eAAAX,EAAA,GAGeE,EAHfD,EAAA,GAAAI,EAAAO,OAAA,SAIeV,GAJf,KAAA,GAAA,MAAAG,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAMQS,QAAQC,MAAM,qCAAdV,EAAAQ,IANRR,EAAAQ,GAAA,KAAA,GAAA,OAAAR,EAAAC,KAAA,GAFQT,EAAAA,UAERQ,EAAAW,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,MAAA,SAAAC,iBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAxB,EAAA,OAAAI,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAAAX,mBAAA,KAAA,EAAA,OAAAE,EAAAyB,EAAAf,KAAAe,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAAAT,EAAAW,MAAA,kGAAA,CAAAS,EAAAC,EAAAC,EAC2BxB,EAAAA,KAD3B,KAAA,EAAA2B,EAAAjB,KAAA,GAAA,MAAA,KAAA,EAAA,MAAAiB,EAAAlB,KAAA,EAAAkB,EAAAX,GAAAW,EAAA,MAAA,GACUzB,QAAAA,MADV,iCACUA,EAAAA,IADVyB,EAAAX,GAAA,KAAA,GAAA,OAAAW,EAAAlB,KAAA,GAAAP,EAAA0B,UAAAD,EAAAR,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAP,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,GAAA,MAGef,OAAAA,QAHf,CAAAJ,OAAAA,OAgCIoB,iBAAAA","file":"publicacionModel.min.js","sourcesContent":["const { obtenerConexion } = require('../datebase/conexion');\n\nasync function getAll() {\n    const conexion = await obtenerConexion();\n    try {\n        const [results] = await conexion.query('SELECT * FROM publicaciones');\n        return results;\n    } catch (error) {\n        console.error('Error al seleccionar publicaciones', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n// Crear una nueva publicación\nasync function crearPublicacion(usuario_id, titulo, contenido, imagen, video) {\n    const conexion = await obtenerConexion();\n    try {\n        await conexion.query(\n            'INSERT INTO publicaciones (usuario_id, titulo, contenido, imagen, video) VALUES (?, ?, ?, ?, ?)',\n            [usuario_id, titulo, contenido, imagen, video]\n        );\n    } catch (error) {\n        console.error('Error al crear la publicación:', error);\n        throw error;\n    } finally {\n        conexion.release();\n    }\n}\n\n\nmodule.exports = {\n    getAll,\n    crearPublicacion\n};"]}