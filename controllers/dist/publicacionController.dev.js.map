{"version":3,"sources":["publicacionController.js"],"names":["PublicacionServicio","require","getPublicaciones","req","res","console","log","limite","publicaciones","publicacionesProcesadas","map","pub","id","usuario_id","titulo","contenido","imagen","video","setHeader","json","title","error","status","crearPublicacion","body","files","buffer","message","module","exports"],"mappings":"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","sourcesContent":["const PublicacionServicio = require('../servicio/publicacionServicio');\n\n// Obtener todas las publicaciones\nasync function getPublicaciones(req, res) {\n    try {\n        console.log('Solicitud recibida para obtener publicaciones');\n        const publicaciones = await PublicacionServicio.getPublicaciones({ limite: 10 });\n        console.log('Publicaciones obtenidas:', publicaciones);\n\n        const publicacionesProcesadas = publicaciones.map(pub => {\n            return {\n                id: pub.id,\n                usuario_id: pub.usuario_id,\n                titulo: pub.titulo,\n                contenido: pub.contenido,\n                imagen: pub.imagen ? `http://localhost:3000/publicaciones/imagen/${pub.id}` : null,\n                video: pub.video ? `http://localhost:3000/publicaciones/video/${pub.id}` : null\n            };\n        });\n\n        console.log('Publicaciones procesadas:', publicacionesProcesadas);\n\n        res.setHeader('Content-Type', 'application/json');\n        res.json({ title: 'Página Principal', publicaciones: publicacionesProcesadas });\n    } catch (error) {\n        console.error('Error al obtener publicaciones:', error);\n        res.status(500).json({ error: 'Error al obtener publicaciones' });\n    }\n}\n\n\nasync function crearPublicacion(req, res) {\n    console.log('Llamada a crearPublicacion');\n    const { usuario_id, titulo, contenido } = req.body;\n    const imagen = req.files && req.files['imagen'] ? req.files['imagen'][0].buffer : null;\n    const video = req.files && req.files['video'] ? req.files['video'][0].buffer : null;\n\n    // Log de depuración para los datos recibidos\n    console.log('Datos de la nueva publicación:', {\n        usuario_id,\n        titulo,\n        contenido,\n        imagen: imagen ? 'Imagen recibida' : 'Sin imagen',\n        video: video ? 'Video recibido' : 'Sin video'\n    });\n\n    try {\n        await PublicacionServicio.crearPublicacion(usuario_id, titulo, contenido, imagen, video);\n        console.log('Publicación creada exitosamente');\n        res.status(201).json({ message: 'Publicación creada exitosamente' });\n    } catch (error) {\n        console.error('Error al crear publicación:', error);\n        res.status(500).json({ error: 'Error al crear publicación' });\n    }\n}\n\nmodule.exports = {\n    getPublicaciones,\n    crearPublicacion\n};\n"],"file":"publicacionController.dev.js"}